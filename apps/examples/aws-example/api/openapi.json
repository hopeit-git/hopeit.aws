{
  "openapi": "3.0.3",
  "info": {
    "version": "0.1",
    "title": "AWS Example",
    "description": "AWS Example"
  },
  "paths": {
    "/api/aws-example/0x1/s3/save-something": {
      "post": {
        "summary": "AWS Example: Save Something",
        "description": "Creates and saves Something",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "provide `id` and `user` to create Something",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SomethingParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "path where object is saved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "s3.save_something"
                  ],
                  "properties": {
                    "s3.save_something": {
                      "type": "string"
                    }
                  },
                  "description": "s3.save_something string payload"
                }
              }
            }
          },
          "400": {
            "description": "bad request reason",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "s3.save_something"
                  ],
                  "properties": {
                    "s3.save_something": {
                      "type": "string"
                    }
                  },
                  "description": "s3.save_something string payload"
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    },
    "/api/aws-example/0x1/s3/query-something": {
      "post": {
        "summary": "AWS Example: Query Something",
        "description": "Loads Something from s3",
        "parameters": [
          {
            "name": "item_id",
            "in": "query",
            "required": true,
            "description": "Item Id to read",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition_key",
            "in": "query",
            "required": true,
            "description": "Partition folder in `YYYY/MM/DD/HH` format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Something object returned when found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Something"
                }
              }
            }
          },
          "404": {
            "description": "Information about not found object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SomethingNotFound"
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    },
    "/api/aws-example/0x1/s3/list-objects": {
      "get": {
        "summary": "AWS Example: List Objects",
        "description": "Lists all available Something objects",
        "parameters": [
          {
            "name": "wildcard",
            "in": "query",
            "required": false,
            "description": "Wildcard to filter objects by name prefixed by partition folder in format YYYY/MM/DD/HH/*",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of Something objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Something"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    },
    "/api/aws-example/0x1/s3/list-files": {
      "get": {
        "summary": "AWS Example: List Files",
        "description": "Lists all available Something objects",
        "parameters": [
          {
            "name": "wildcard",
            "in": "query",
            "required": false,
            "description": "Wildcard to filter objects by name prefixed by partition folder in format YYYY/MM/DD/HH/*",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of ItemLocators",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemLocator"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    },
    "/api/aws-example/0x1/s3/upload-download-file": {
      "get": {
        "summary": "AWS Example: Upload Download File",
        "description": "This example just upload and download files to s2 storage as example of usage",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of created Something objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadedFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "s3.upload_download_file"
                  ],
                  "properties": {
                    "s3.upload_download_file": {
                      "type": "string"
                    }
                  },
                  "description": "s3.upload_download_file string payload"
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    },
    "/api/aws-example/0x1/s3/streamed-upload-file": {
      "post": {
        "summary": "AWS Example: Streamed Upload File",
        "description": "Upload files using Multipart form request",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "attachment"
                  }
                }
              },
              "encoding": {
                "attachment": {
                  "contentType": "application/octect-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "list of created Something objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadedFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "s3.streamed_upload_file"
                  ],
                  "properties": {
                    "s3.streamed_upload_file": {
                      "type": "string"
                    }
                  },
                  "description": "s3.streamed_upload_file string payload"
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    },
    "/api/aws-example/0x1/s3/streamed-download-file": {
      "get": {
        "summary": "AWS Example: Streamed Download File",
        "description": "Download streamed S3 content as file.\nThe PostprocessHook return the requested resource as stream using `prepare_stream_response`.",
        "parameters": [
          {
            "name": "file_name",
            "in": "query",
            "required": true,
            "description": "expected return file name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition_key",
            "in": "query",
            "required": false,
            "description": "Partition folder in `YYYY/MM/DD/HH` format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a file",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "s3.streamed_download_file"
                  ],
                  "properties": {
                    "s3.streamed_download_file": {
                      "type": "string"
                    }
                  },
                  "description": "s3.streamed_download_file string payload"
                }
              }
            }
          }
        },
        "tags": [
          "aws_example.0x1"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SomethingParams": {
        "type": "object",
        "required": [
          "id",
          "user"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        },
        "x-module-name": "aws_example.model",
        "description": "Params to create and save Something"
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "x-module-name": "aws_example.model",
        "description": "User information"
      },
      "Status": {
        "type": "object",
        "required": [
          "ts",
          "type"
        ],
        "properties": {
          "ts": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "NEW",
              "LOADED",
              "SUBMITTED",
              "PROCESSED"
            ],
            "x-enum-name": "StatusType",
            "x-module-name": "aws_example.model"
          }
        },
        "x-module-name": "aws_example.model",
        "description": "Status change"
      },
      "Something": {
        "type": "object",
        "required": [
          "id",
          "user"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "default": []
          }
        },
        "x-module-name": "aws_example.model",
        "description": "Example Something event"
      },
      "SomethingNotFound": {
        "type": "object",
        "required": [
          "path",
          "id"
        ],
        "properties": {
          "path": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "x-module-name": "aws_example.model",
        "description": "Item not found in datastore"
      },
      "ItemLocator": {
        "type": "object",
        "required": [
          "item_id"
        ],
        "properties": {
          "item_id": {
            "type": "string"
          },
          "partition_key": {
            "type": "string"
          }
        },
        "x-module-name": "hopeit.aws.s3.object_storage",
        "description": "ItemLocator(item_id: str, partition_key: Optional[str] = None)"
      },
      "UploadedFile": {
        "type": "object",
        "required": [
          "file_id",
          "file_name",
          "saved_path",
          "size"
        ],
        "properties": {
          "file_id": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "saved_path": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        },
        "x-module-name": "aws_example.s3.streamed_upload_file",
        "description": "UploadedFile(file_id: str, file_name: str, saved_path: str, size: int)"
      }
    },
    "securitySchemes": {
      "auth.basic": {
        "type": "http",
        "scheme": "basic"
      },
      "auth.bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": []
}